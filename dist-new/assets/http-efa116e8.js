import{cO as l,gI as r}from"./main-1e616d6f.js";import{n as o,s as a,g,f as d,p}from"./browser-9096de8d.js";const v={Accept:"application/json","Content-Type":"application/json"},f="POST",h={headers:v,method:f},c=10;class y{constructor(e,t=!1){if(this.url=e,this.disableProviderPing=t,this.events=new l.EventEmitter,this.isAvailable=!1,this.registering=!1,!o(e))throw new Error(`Provided URL is not compatible with HTTP connection: ${e}`);this.url=e,this.disableProviderPing=t}get connected(){return this.isAvailable}get connecting(){return this.registering}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}off(e,t){this.events.off(e,t)}removeListener(e,t){this.events.removeListener(e,t)}async open(e=this.url){await this.register(e)}async close(){if(!this.isAvailable)throw new Error("Connection already closed");this.onClose()}async send(e,t){this.isAvailable||await this.register();try{const s=a(e),n=await(await r(this.url,Object.assign(Object.assign({},h),{body:s}))).json();this.onPayload({data:n})}catch(s){this.onError(e.id,s)}}async register(e=this.url){if(!o(e))throw new Error(`Provided URL is not compatible with HTTP connection: ${e}`);if(this.registering){const t=this.events.getMaxListeners();return(this.events.listenerCount("register_error")>=t||this.events.listenerCount("open")>=t)&&this.events.setMaxListeners(t+1),new Promise((s,i)=>{this.events.once("register_error",n=>{this.resetMaxListeners(),i(n)}),this.events.once("open",()=>{if(this.resetMaxListeners(),typeof this.isAvailable>"u")return i(new Error("HTTP connection is missing or invalid"));s()})})}this.url=e,this.registering=!0;try{if(!this.disableProviderPing){const t=a({id:1,jsonrpc:"2.0",method:"test",params:[]});await r(e,Object.assign(Object.assign({},h),{body:t}))}this.onOpen()}catch(t){const s=this.parseError(t);throw this.events.emit("register_error",s),this.onClose(),s}}onOpen(){this.isAvailable=!0,this.registering=!1,this.events.emit("open")}onClose(){this.isAvailable=!1,this.registering=!1,this.events.emit("close")}onPayload(e){if(typeof e.data>"u")return;const t=typeof e.data=="string"?g(e.data):e.data;this.events.emit("payload",t)}onError(e,t){const s=this.parseError(t),i=s.message||s.toString(),n=d(e,i);this.events.emit("payload",n)}parseError(e,t=this.url){return p(e,t,"HTTP")}resetMaxListeners(){this.events.getMaxListeners()>c&&this.events.setMaxListeners(c)}}export{y as H};

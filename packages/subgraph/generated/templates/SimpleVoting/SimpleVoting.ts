// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CastVote extends ethereum.Event {
  get params(): CastVote__Params {
    return new CastVote__Params(this);
  }
}

export class CastVote__Params {
  _event: CastVote;

  constructor(event: CastVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get voterSupports(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get stake(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ChangeMinQuorum extends ethereum.Event {
  get params(): ChangeMinQuorum__Params {
    return new ChangeMinQuorum__Params(this);
  }
}

export class ChangeMinQuorum__Params {
  _event: ChangeMinQuorum;

  constructor(event: ChangeMinQuorum) {
    this._event = event;
  }

  get minAcceptQuorumPct(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeSupportRequired extends ethereum.Event {
  get params(): ChangeSupportRequired__Params {
    return new ChangeSupportRequired__Params(this);
  }
}

export class ChangeSupportRequired__Params {
  _event: ChangeSupportRequired;

  constructor(event: ChangeSupportRequired) {
    this._event = event;
  }

  get supportRequiredPct(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExecuteVote extends ethereum.Event {
  get params(): ExecuteVote__Params {
    return new ExecuteVote__Params(this);
  }
}

export class ExecuteVote__Params {
  _event: ExecuteVote;

  constructor(event: ExecuteVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GovernancePrimitiveExecuted extends ethereum.Event {
  get params(): GovernancePrimitiveExecuted__Params {
    return new GovernancePrimitiveExecuted__Params(this);
  }
}

export class GovernancePrimitiveExecuted__Params {
  _event: GovernancePrimitiveExecuted;

  constructor(event: GovernancePrimitiveExecuted) {
    this._event = event;
  }

  get execution(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get executionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GovernancePrimitiveStarted extends ethereum.Event {
  get params(): GovernancePrimitiveStarted__Params {
    return new GovernancePrimitiveStarted__Params(this);
  }
}

export class GovernancePrimitiveStarted__Params {
  _event: GovernancePrimitiveStarted;

  constructor(event: GovernancePrimitiveStarted) {
    this._event = event;
  }

  get execution(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get executionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StartVote extends ethereum.Event {
  get params(): StartVote__Params {
    return new StartVote__Params(this);
  }
}

export class StartVote__Params {
  _event: StartVote;

  constructor(event: StartVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VotedOnGovernancePrimitive extends ethereum.Event {
  get params(): VotedOnGovernancePrimitive__Params {
    return new VotedOnGovernancePrimitive__Params(this);
  }
}

export class VotedOnGovernancePrimitive__Params {
  _event: VotedOnGovernancePrimitive;

  constructor(event: VotedOnGovernancePrimitive) {
    this._event = event;
  }

  get execution(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get data(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get executionId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SimpleVoting__getVoteResultActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get data(): Bytes {
    return this[2].toBytes();
  }
}

export class SimpleVoting__getVoteResult {
  value0: boolean;
  value1: boolean;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: Array<SimpleVoting__getVoteResultActionsStruct>;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: Array<SimpleVoting__getVoteResultActionsStruct>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromTupleArray(this.value9));
    return map;
  }
}

export class SimpleVoting__startInputProcessStruct extends ethereum.Tuple {
  get governancePrimitive(): Address {
    return this[0].toAddress();
  }

  get permissions(): SimpleVoting__startInputProcessPermissionsStruct {
    return changetype<SimpleVoting__startInputProcessPermissionsStruct>(
      this[1].toTuple()
    );
  }

  get allowedActions(): Array<
    SimpleVoting__startInputProcessAllowedActionsStruct
  > {
    return this[2].toTupleArray<
      SimpleVoting__startInputProcessAllowedActionsStruct
    >();
  }

  get metadata(): Bytes {
    return this[3].toBytes();
  }
}

export class SimpleVoting__startInputProcessPermissionsStruct extends ethereum.Tuple {
  get start(): string {
    return this[0].toString();
  }

  get execute(): string {
    return this[1].toString();
  }

  get halt(): string {
    return this[2].toString();
  }

  get forward(): string {
    return this[3].toString();
  }

  get stop(): string {
    return this[4].toString();
  }

  get vote(): string {
    return this[5].toString();
  }
}

export class SimpleVoting__startInputProcessAllowedActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get methods(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class SimpleVoting__startInputProposalStruct extends ethereum.Tuple {
  get processName(): string {
    return this[0].toString();
  }

  get actions(): Array<SimpleVoting__startInputProposalActionsStruct> {
    return this[1].toTupleArray<
      SimpleVoting__startInputProposalActionsStruct
    >();
  }

  get metadata(): Bytes {
    return this[2].toBytes();
  }

  get additionalArguments(): Bytes {
    return this[3].toBytes();
  }
}

export class SimpleVoting__startInputProposalActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get data(): Bytes {
    return this[2].toBytes();
  }
}

export class SimpleVoting extends ethereum.SmartContract {
  static bind(address: Address): SimpleVoting {
    return new SimpleVoting("SimpleVoting", address);
  }

  CREATE_PRIMITIVE_START_ROLE(): Bytes {
    let result = super.call(
      "CREATE_PRIMITIVE_START_ROLE",
      "CREATE_PRIMITIVE_START_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CREATE_PRIMITIVE_START_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CREATE_PRIMITIVE_START_ROLE",
      "CREATE_PRIMITIVE_START_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MODIFY_QUORUM_ROLE(): Bytes {
    let result = super.call(
      "MODIFY_QUORUM_ROLE",
      "MODIFY_QUORUM_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MODIFY_QUORUM_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MODIFY_QUORUM_ROLE",
      "MODIFY_QUORUM_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MODIFY_SUPPORT_ROLE(): Bytes {
    let result = super.call(
      "MODIFY_SUPPORT_ROLE",
      "MODIFY_SUPPORT_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MODIFY_SUPPORT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MODIFY_SUPPORT_ROLE",
      "MODIFY_SUPPORT_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PCT_BASE(): BigInt {
    let result = super.call("PCT_BASE", "PCT_BASE():(uint64)", []);

    return result[0].toBigInt();
  }

  try_PCT_BASE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PCT_BASE", "PCT_BASE():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PRIMITIVE_EXECUTE_ROLE(): Bytes {
    let result = super.call(
      "PRIMITIVE_EXECUTE_ROLE",
      "PRIMITIVE_EXECUTE_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_PRIMITIVE_EXECUTE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "PRIMITIVE_EXECUTE_ROLE",
      "PRIMITIVE_EXECUTE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UPGRADE_ROLE(): Bytes {
    let result = super.call("UPGRADE_ROLE", "UPGRADE_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UPGRADE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("UPGRADE_ROLE", "UPGRADE_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  canVote(_voteId: BigInt, _voter: Address): boolean {
    let result = super.call("canVote", "canVote(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId),
      ethereum.Value.fromAddress(_voter)
    ]);

    return result[0].toBoolean();
  }

  try_canVote(_voteId: BigInt, _voter: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("canVote", "canVote(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId),
      ethereum.Value.fromAddress(_voter)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getVote(_voteId: BigInt): SimpleVoting__getVoteResult {
    let result = super.call(
      "getVote",
      "getVote(uint256):(bool,bool,uint256,uint256,uint64,uint64,uint256,uint256,uint256,(address,uint256,bytes)[])",
      [ethereum.Value.fromUnsignedBigInt(_voteId)]
    );

    return new SimpleVoting__getVoteResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toTupleArray<SimpleVoting__getVoteResultActionsStruct>()
    );
  }

  try_getVote(
    _voteId: BigInt
  ): ethereum.CallResult<SimpleVoting__getVoteResult> {
    let result = super.tryCall(
      "getVote",
      "getVote(uint256):(bool,bool,uint256,uint256,uint64,uint64,uint256,uint256,uint256,(address,uint256,bytes)[])",
      [ethereum.Value.fromUnsignedBigInt(_voteId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SimpleVoting__getVoteResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toTupleArray<SimpleVoting__getVoteResultActionsStruct>()
      )
    );
  }

  getVoterState(_voteId: BigInt, _voter: Address): i32 {
    let result = super.call(
      "getVoterState",
      "getVoterState(uint256,address):(uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(_voteId),
        ethereum.Value.fromAddress(_voter)
      ]
    );

    return result[0].toI32();
  }

  try_getVoterState(
    _voteId: BigInt,
    _voter: Address
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getVoterState",
      "getVoterState(uint256,address):(uint8)",
      [
        ethereum.Value.fromUnsignedBigInt(_voteId),
        ethereum.Value.fromAddress(_voter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  minAcceptQuorumPct(): BigInt {
    let result = super.call(
      "minAcceptQuorumPct",
      "minAcceptQuorumPct():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_minAcceptQuorumPct(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minAcceptQuorumPct",
      "minAcceptQuorumPct():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  start(
    process: SimpleVoting__startInputProcessStruct,
    proposal: SimpleVoting__startInputProposalStruct
  ): BigInt {
    let result = super.call(
      "start",
      "start((address,(string,string,string,string,string,string),(address,bytes4[])[],bytes),(string,(address,uint256,bytes)[],bytes,bytes)):(uint256)",
      [ethereum.Value.fromTuple(process), ethereum.Value.fromTuple(proposal)]
    );

    return result[0].toBigInt();
  }

  try_start(
    process: SimpleVoting__startInputProcessStruct,
    proposal: SimpleVoting__startInputProposalStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "start",
      "start((address,(string,string,string,string,string,string),(address,bytes4[])[],bytes),(string,(address,uint256,bytes)[],bytes,bytes)):(uint256)",
      [ethereum.Value.fromTuple(process), ethereum.Value.fromTuple(proposal)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportRequiredPct(): BigInt {
    let result = super.call(
      "supportRequiredPct",
      "supportRequiredPct():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_supportRequiredPct(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "supportRequiredPct",
      "supportRequiredPct():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  voteTime(): BigInt {
    let result = super.call("voteTime", "voteTime():(uint64)", []);

    return result[0].toBigInt();
  }

  try_voteTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("voteTime", "voteTime():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votesLength(): BigInt {
    let result = super.call("votesLength", "votesLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votesLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votesLength", "votesLength():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeMinAcceptQuorumPctCall extends ethereum.Call {
  get inputs(): ChangeMinAcceptQuorumPctCall__Inputs {
    return new ChangeMinAcceptQuorumPctCall__Inputs(this);
  }

  get outputs(): ChangeMinAcceptQuorumPctCall__Outputs {
    return new ChangeMinAcceptQuorumPctCall__Outputs(this);
  }
}

export class ChangeMinAcceptQuorumPctCall__Inputs {
  _call: ChangeMinAcceptQuorumPctCall;

  constructor(call: ChangeMinAcceptQuorumPctCall) {
    this._call = call;
  }

  get _minAcceptQuorumPct(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeMinAcceptQuorumPctCall__Outputs {
  _call: ChangeMinAcceptQuorumPctCall;

  constructor(call: ChangeMinAcceptQuorumPctCall) {
    this._call = call;
  }
}

export class ChangeSupportRequiredPctCall extends ethereum.Call {
  get inputs(): ChangeSupportRequiredPctCall__Inputs {
    return new ChangeSupportRequiredPctCall__Inputs(this);
  }

  get outputs(): ChangeSupportRequiredPctCall__Outputs {
    return new ChangeSupportRequiredPctCall__Outputs(this);
  }
}

export class ChangeSupportRequiredPctCall__Inputs {
  _call: ChangeSupportRequiredPctCall;

  constructor(call: ChangeSupportRequiredPctCall) {
    this._call = call;
  }

  get _supportRequiredPct(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeSupportRequiredPctCall__Outputs {
  _call: ChangeSupportRequiredPctCall;

  constructor(call: ChangeSupportRequiredPctCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get executionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _dao(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class Initialize1Call extends ethereum.Call {
  get inputs(): Initialize1Call__Inputs {
    return new Initialize1Call__Inputs(this);
  }

  get outputs(): Initialize1Call__Outputs {
    return new Initialize1Call__Outputs(this);
  }
}

export class Initialize1Call__Inputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }

  get _dao(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _voteSettings(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class Initialize1Call__Outputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }
}

export class StartCall extends ethereum.Call {
  get inputs(): StartCall__Inputs {
    return new StartCall__Inputs(this);
  }

  get outputs(): StartCall__Outputs {
    return new StartCall__Outputs(this);
  }
}

export class StartCall__Inputs {
  _call: StartCall;

  constructor(call: StartCall) {
    this._call = call;
  }

  get process(): StartCallProcessStruct {
    return changetype<StartCallProcessStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get proposal(): StartCallProposalStruct {
    return changetype<StartCallProposalStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class StartCall__Outputs {
  _call: StartCall;

  constructor(call: StartCall) {
    this._call = call;
  }

  get executionId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class StartCallProcessStruct extends ethereum.Tuple {
  get governancePrimitive(): Address {
    return this[0].toAddress();
  }

  get permissions(): StartCallProcessPermissionsStruct {
    return changetype<StartCallProcessPermissionsStruct>(this[1].toTuple());
  }

  get allowedActions(): Array<StartCallProcessAllowedActionsStruct> {
    return this[2].toTupleArray<StartCallProcessAllowedActionsStruct>();
  }

  get metadata(): Bytes {
    return this[3].toBytes();
  }
}

export class StartCallProcessPermissionsStruct extends ethereum.Tuple {
  get start(): string {
    return this[0].toString();
  }

  get execute(): string {
    return this[1].toString();
  }

  get halt(): string {
    return this[2].toString();
  }

  get forward(): string {
    return this[3].toString();
  }

  get stop(): string {
    return this[4].toString();
  }

  get vote(): string {
    return this[5].toString();
  }
}

export class StartCallProcessAllowedActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get methods(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class StartCallProposalStruct extends ethereum.Tuple {
  get processName(): string {
    return this[0].toString();
  }

  get actions(): Array<StartCallProposalActionsStruct> {
    return this[1].toTupleArray<StartCallProposalActionsStruct>();
  }

  get metadata(): Bytes {
    return this[2].toBytes();
  }

  get additionalArguments(): Bytes {
    return this[3].toBytes();
  }
}

export class StartCallProposalActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get data(): Bytes {
    return this[2].toBytes();
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get executionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}

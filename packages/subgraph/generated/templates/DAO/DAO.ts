// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Frozen extends ethereum.Event {
  get params(): Frozen__Params {
    return new Frozen__Params(this);
  }
}

export class Frozen__Params {
  _event: Frozen;

  constructor(event: Frozen) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get actor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get where(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Granted extends ethereum.Event {
  get params(): Granted__Params {
    return new Granted__Params(this);
  }
}

export class Granted__Params {
  _event: Granted;

  constructor(event: Granted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get actor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get who(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get where(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get oracle(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class NewProposal extends ethereum.Event {
  get params(): NewProposal__Params {
    return new NewProposal__Params(this);
  }
}

export class NewProposal__Params {
  _event: NewProposal;

  constructor(event: NewProposal) {
    this._event = event;
  }

  get proposal(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get process(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get submitter(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get executionId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Revoked extends ethereum.Event {
  get params(): Revoked__Params {
    return new Revoked__Params(this);
  }
}

export class Revoked__Params {
  _event: Revoked;

  constructor(event: Revoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get actor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get who(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get where(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DAO__startResultProcessStruct extends ethereum.Tuple {
  get governancePrimitive(): Address {
    return this[0].toAddress();
  }

  get permissions(): DAO__startResultProcessPermissionsStruct {
    return changetype<DAO__startResultProcessPermissionsStruct>(
      this[1].toTuple()
    );
  }

  get allowedActions(): Array<DAO__startResultProcessAllowedActionsStruct> {
    return this[2].toTupleArray<DAO__startResultProcessAllowedActionsStruct>();
  }

  get metadata(): Bytes {
    return this[3].toBytes();
  }
}

export class DAO__startResultProcessPermissionsStruct extends ethereum.Tuple {
  get start(): string {
    return this[0].toString();
  }

  get execute(): string {
    return this[1].toString();
  }

  get halt(): string {
    return this[2].toString();
  }

  get forward(): string {
    return this[3].toString();
  }

  get stop(): string {
    return this[4].toString();
  }

  get vote(): string {
    return this[5].toString();
  }
}

export class DAO__startResultProcessAllowedActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get methods(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class DAO__startResult {
  value0: DAO__startResultProcessStruct;
  value1: BigInt;

  constructor(value0: DAO__startResultProcessStruct, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class DAO__startInputProposalStruct extends ethereum.Tuple {
  get processName(): string {
    return this[0].toString();
  }

  get actions(): Array<DAO__startInputProposalActionsStruct> {
    return this[1].toTupleArray<DAO__startInputProposalActionsStruct>();
  }

  get metadata(): Bytes {
    return this[2].toBytes();
  }

  get additionalArguments(): Bytes {
    return this[3].toBytes();
  }
}

export class DAO__startInputProposalActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get data(): Bytes {
    return this[2].toBytes();
  }
}

export class DAO extends ethereum.SmartContract {
  static bind(address: Address): DAO {
    return new DAO("DAO", address);
  }

  DAO_CONFIG_ROLE(): Bytes {
    let result = super.call(
      "DAO_CONFIG_ROLE",
      "DAO_CONFIG_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DAO_CONFIG_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DAO_CONFIG_ROLE",
      "DAO_CONFIG_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROOT_ROLE(): Bytes {
    let result = super.call("ROOT_ROLE", "ROOT_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROOT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROOT_ROLE", "ROOT_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UPGRADE_ROLE(): Bytes {
    let result = super.call("UPGRADE_ROLE", "UPGRADE_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UPGRADE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("UPGRADE_ROLE", "UPGRADE_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  executor(): Address {
    let result = super.call("executor", "executor():(address)", []);

    return result[0].toAddress();
  }

  try_executor(): ethereum.CallResult<Address> {
    let result = super.tryCall("executor", "executor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasPermission(_where: Address, _who: Address, _role: Bytes): boolean {
    let result = super.call(
      "hasPermission",
      "hasPermission(address,address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(_where),
        ethereum.Value.fromAddress(_who),
        ethereum.Value.fromFixedBytes(_role)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasPermission(
    _where: Address,
    _who: Address,
    _role: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasPermission",
      "hasPermission(address,address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(_where),
        ethereum.Value.fromAddress(_who),
        ethereum.Value.fromFixedBytes(_role)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isFrozen(_where: Address, _role: Bytes): boolean {
    let result = super.call("isFrozen", "isFrozen(address,bytes32):(bool)", [
      ethereum.Value.fromAddress(_where),
      ethereum.Value.fromFixedBytes(_role)
    ]);

    return result[0].toBoolean();
  }

  try_isFrozen(_where: Address, _role: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("isFrozen", "isFrozen(address,bytes32):(bool)", [
      ethereum.Value.fromAddress(_where),
      ethereum.Value.fromFixedBytes(_role)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  metadata(): Bytes {
    let result = super.call("metadata", "metadata():(bytes)", []);

    return result[0].toBytes();
  }

  try_metadata(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("metadata", "metadata():(bytes)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  permissions(): Address {
    let result = super.call("permissions", "permissions():(address)", []);

    return result[0].toAddress();
  }

  try_permissions(): ethereum.CallResult<Address> {
    let result = super.tryCall("permissions", "permissions():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  processes(): Address {
    let result = super.call("processes", "processes():(address)", []);

    return result[0].toAddress();
  }

  try_processes(): ethereum.CallResult<Address> {
    let result = super.tryCall("processes", "processes():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  start(proposal: DAO__startInputProposalStruct): DAO__startResult {
    let result = super.call(
      "start",
      "start((string,(address,uint256,bytes)[],bytes,bytes)):((address,(string,string,string,string,string,string),(address,bytes4[])[],bytes),uint256)",
      [ethereum.Value.fromTuple(proposal)]
    );

    return changetype<DAO__startResult>(
      new DAO__startResult(
        changetype<DAO__startResultProcessStruct>(result[0].toTuple()),
        result[1].toBigInt()
      )
    );
  }

  try_start(
    proposal: DAO__startInputProposalStruct
  ): ethereum.CallResult<DAO__startResult> {
    let result = super.tryCall(
      "start",
      "start((string,(address,uint256,bytes)[],bytes,bytes)):((address,(string,string,string,string,string,string),(address,bytes4[])[],bytes),uint256)",
      [ethereum.Value.fromTuple(proposal)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DAO__startResult>(
        new DAO__startResult(
          changetype<DAO__startResultProcessStruct>(value[0].toTuple()),
          value[1].toBigInt()
        )
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddRoleCall extends ethereum.Call {
  get inputs(): AddRoleCall__Inputs {
    return new AddRoleCall__Inputs(this);
  }

  get outputs(): AddRoleCall__Outputs {
    return new AddRoleCall__Outputs(this);
  }
}

export class AddRoleCall__Inputs {
  _call: AddRoleCall;

  constructor(call: AddRoleCall) {
    this._call = call;
  }

  get role(): string {
    return this._call.inputValues[0].value.toString();
  }

  get permission(): AddRoleCallPermissionStruct {
    return changetype<AddRoleCallPermissionStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class AddRoleCall__Outputs {
  _call: AddRoleCall;

  constructor(call: AddRoleCall) {
    this._call = call;
  }
}

export class AddRoleCallPermissionStruct extends ethereum.Tuple {
  get operator(): i32 {
    return this[0].toI32();
  }

  get validators(): Array<Address> {
    return this[1].toAddressArray();
  }

  get data(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class BulkCall extends ethereum.Call {
  get inputs(): BulkCall__Inputs {
    return new BulkCall__Inputs(this);
  }

  get outputs(): BulkCall__Outputs {
    return new BulkCall__Outputs(this);
  }
}

export class BulkCall__Inputs {
  _call: BulkCall;

  constructor(call: BulkCall) {
    this._call = call;
  }

  get _where(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get items(): Array<BulkCallItemsStruct> {
    return this._call.inputValues[1].value.toTupleArray<BulkCallItemsStruct>();
  }
}

export class BulkCall__Outputs {
  _call: BulkCall;

  constructor(call: BulkCall) {
    this._call = call;
  }
}

export class BulkCallItemsStruct extends ethereum.Tuple {
  get op(): i32 {
    return this[0].toI32();
  }

  get role(): Bytes {
    return this[1].toBytes();
  }

  get who(): Address {
    return this[2].toAddress();
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get executionID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get governancePrimitive(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class FreezeCall extends ethereum.Call {
  get inputs(): FreezeCall__Inputs {
    return new FreezeCall__Inputs(this);
  }

  get outputs(): FreezeCall__Outputs {
    return new FreezeCall__Outputs(this);
  }
}

export class FreezeCall__Inputs {
  _call: FreezeCall;

  constructor(call: FreezeCall) {
    this._call = call;
  }

  get _where(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _role(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class FreezeCall__Outputs {
  _call: FreezeCall;

  constructor(call: FreezeCall) {
    this._call = call;
  }
}

export class GrantCall extends ethereum.Call {
  get inputs(): GrantCall__Inputs {
    return new GrantCall__Inputs(this);
  }

  get outputs(): GrantCall__Outputs {
    return new GrantCall__Outputs(this);
  }
}

export class GrantCall__Inputs {
  _call: GrantCall;

  constructor(call: GrantCall) {
    this._call = call;
  }

  get _where(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _who(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _role(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class GrantCall__Outputs {
  _call: GrantCall;

  constructor(call: GrantCall) {
    this._call = call;
  }
}

export class GrantWithOracleCall extends ethereum.Call {
  get inputs(): GrantWithOracleCall__Inputs {
    return new GrantWithOracleCall__Inputs(this);
  }

  get outputs(): GrantWithOracleCall__Outputs {
    return new GrantWithOracleCall__Outputs(this);
  }
}

export class GrantWithOracleCall__Inputs {
  _call: GrantWithOracleCall;

  constructor(call: GrantWithOracleCall) {
    this._call = call;
  }

  get _where(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _who(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _role(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _oracle(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class GrantWithOracleCall__Outputs {
  _call: GrantWithOracleCall;

  constructor(call: GrantWithOracleCall) {
    this._call = call;
  }
}

export class HasPermissionCall extends ethereum.Call {
  get inputs(): HasPermissionCall__Inputs {
    return new HasPermissionCall__Inputs(this);
  }

  get outputs(): HasPermissionCall__Outputs {
    return new HasPermissionCall__Outputs(this);
  }
}

export class HasPermissionCall__Inputs {
  _call: HasPermissionCall;

  constructor(call: HasPermissionCall) {
    this._call = call;
  }

  get _where(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _who(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _role(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class HasPermissionCall__Outputs {
  _call: HasPermissionCall;

  constructor(call: HasPermissionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _metadata(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _processes(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _permissions(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _executor(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _aclRoot(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class Initialize1Call extends ethereum.Call {
  get inputs(): Initialize1Call__Inputs {
    return new Initialize1Call__Inputs(this);
  }

  get outputs(): Initialize1Call__Outputs {
    return new Initialize1Call__Outputs(this);
  }
}

export class Initialize1Call__Inputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }

  get _dao(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Initialize1Call__Outputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }
}

export class RevokeCall extends ethereum.Call {
  get inputs(): RevokeCall__Inputs {
    return new RevokeCall__Inputs(this);
  }

  get outputs(): RevokeCall__Outputs {
    return new RevokeCall__Outputs(this);
  }
}

export class RevokeCall__Inputs {
  _call: RevokeCall;

  constructor(call: RevokeCall) {
    this._call = call;
  }

  get _where(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _who(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _role(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class RevokeCall__Outputs {
  _call: RevokeCall;

  constructor(call: RevokeCall) {
    this._call = call;
  }
}

export class SetExecutorCall extends ethereum.Call {
  get inputs(): SetExecutorCall__Inputs {
    return new SetExecutorCall__Inputs(this);
  }

  get outputs(): SetExecutorCall__Outputs {
    return new SetExecutorCall__Outputs(this);
  }
}

export class SetExecutorCall__Inputs {
  _call: SetExecutorCall;

  constructor(call: SetExecutorCall) {
    this._call = call;
  }

  get _executor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetExecutorCall__Outputs {
  _call: SetExecutorCall;

  constructor(call: SetExecutorCall) {
    this._call = call;
  }
}

export class SetMetadataCall extends ethereum.Call {
  get inputs(): SetMetadataCall__Inputs {
    return new SetMetadataCall__Inputs(this);
  }

  get outputs(): SetMetadataCall__Outputs {
    return new SetMetadataCall__Outputs(this);
  }
}

export class SetMetadataCall__Inputs {
  _call: SetMetadataCall;

  constructor(call: SetMetadataCall) {
    this._call = call;
  }

  get _metadata(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetMetadataCall__Outputs {
  _call: SetMetadataCall;

  constructor(call: SetMetadataCall) {
    this._call = call;
  }
}

export class SetProcessCall extends ethereum.Call {
  get inputs(): SetProcessCall__Inputs {
    return new SetProcessCall__Inputs(this);
  }

  get outputs(): SetProcessCall__Outputs {
    return new SetProcessCall__Outputs(this);
  }
}

export class SetProcessCall__Inputs {
  _call: SetProcessCall;

  constructor(call: SetProcessCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get process(): SetProcessCallProcessStruct {
    return changetype<SetProcessCallProcessStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class SetProcessCall__Outputs {
  _call: SetProcessCall;

  constructor(call: SetProcessCall) {
    this._call = call;
  }
}

export class SetProcessCallProcessStruct extends ethereum.Tuple {
  get governancePrimitive(): Address {
    return this[0].toAddress();
  }

  get permissions(): SetProcessCallProcessPermissionsStruct {
    return changetype<SetProcessCallProcessPermissionsStruct>(
      this[1].toTuple()
    );
  }

  get allowedActions(): Array<SetProcessCallProcessAllowedActionsStruct> {
    return this[2].toTupleArray<SetProcessCallProcessAllowedActionsStruct>();
  }

  get metadata(): Bytes {
    return this[3].toBytes();
  }
}

export class SetProcessCallProcessPermissionsStruct extends ethereum.Tuple {
  get start(): string {
    return this[0].toString();
  }

  get execute(): string {
    return this[1].toString();
  }

  get halt(): string {
    return this[2].toString();
  }

  get forward(): string {
    return this[3].toString();
  }

  get stop(): string {
    return this[4].toString();
  }

  get vote(): string {
    return this[5].toString();
  }
}

export class SetProcessCallProcessAllowedActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get methods(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class StartCall extends ethereum.Call {
  get inputs(): StartCall__Inputs {
    return new StartCall__Inputs(this);
  }

  get outputs(): StartCall__Outputs {
    return new StartCall__Outputs(this);
  }
}

export class StartCall__Inputs {
  _call: StartCall;

  constructor(call: StartCall) {
    this._call = call;
  }

  get proposal(): StartCallProposalStruct {
    return changetype<StartCallProposalStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class StartCall__Outputs {
  _call: StartCall;

  constructor(call: StartCall) {
    this._call = call;
  }

  get process(): StartCallProcessStruct {
    return changetype<StartCallProcessStruct>(
      this._call.outputValues[0].value.toTuple()
    );
  }

  get executionId(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class StartCallProposalStruct extends ethereum.Tuple {
  get processName(): string {
    return this[0].toString();
  }

  get actions(): Array<StartCallProposalActionsStruct> {
    return this[1].toTupleArray<StartCallProposalActionsStruct>();
  }

  get metadata(): Bytes {
    return this[2].toBytes();
  }

  get additionalArguments(): Bytes {
    return this[3].toBytes();
  }
}

export class StartCallProposalActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get data(): Bytes {
    return this[2].toBytes();
  }
}

export class StartCallProcessStruct extends ethereum.Tuple {
  get governancePrimitive(): Address {
    return this[0].toAddress();
  }

  get permissions(): StartCallProcessPermissionsStruct {
    return changetype<StartCallProcessPermissionsStruct>(this[1].toTuple());
  }

  get allowedActions(): Array<StartCallProcessAllowedActionsStruct> {
    return this[2].toTupleArray<StartCallProcessAllowedActionsStruct>();
  }

  get metadata(): Bytes {
    return this[3].toBytes();
  }
}

export class StartCallProcessPermissionsStruct extends ethereum.Tuple {
  get start(): string {
    return this[0].toString();
  }

  get execute(): string {
    return this[1].toString();
  }

  get halt(): string {
    return this[2].toString();
  }

  get forward(): string {
    return this[3].toString();
  }

  get stop(): string {
    return this[4].toString();
  }

  get vote(): string {
    return this[5].toString();
  }
}

export class StartCallProcessAllowedActionsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get methods(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

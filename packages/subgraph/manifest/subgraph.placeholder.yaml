{{info}}
specVersion: 0.0.2
description: A template for Aragon subgraphs
repository: https://github.com/zaragoza
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Registry
    network: {{network}}
    source:
      abi: Registry
      address: '{{dataSources.Registry.address}}'
      startBlock: {{dataSources.Registry.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Dao
      abis:
        - name: Registry
          file: ./../contracts/artifacts/contracts/bootstrap/registry/Registry.sol/Registry.json
      eventHandlers:
        - event: NewDAORegistered(string,indexed address,indexed address)
          handler: handleNewDAORegistered
      file: ./src/registry.ts
# templates
templates:
  # DAO
  - name: DAO
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: DAO
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/dao.ts
      entities:
        - Dao
      abis:
        - name: DAO
          file: ./../contracts/artifacts/contracts/core/DAO.sol/DAO.json
      eventHandlers:
        - event: AddProcess(address)
          handler: handleAddProcess
        - event: RemoveProcess(address)
          handler: handleRemoveProcess
        - event: SetMetadata(indexed bytes)
          handler: handleSetMetadata
        - event : Executed(indexed address,(address,uint256,bytes)[],bytes[])
          handler: handleExecuted
        - event: Deposited(indexed address,indexed address,uint256,string)
          handler: handleDeposited
        - event: ETHDeposited(address,uint256)
          handler: handleETHDeposited
        - event: Withdrawn(indexed address,indexed address,address,uint256,string)
          handler: handleWithdrawn
  # Processes (core)
  - name: Process
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Process
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/process.ts
      entities:
        - Execution
        - Process
      abis:
        - name: Process
          file: ./../contracts/artifacts/contracts/core/processes/types/Process.sol/Process.json
      eventHandlers:
        - event: AllowedActionsAdded(bytes[])
          handler: handleAllowedActionsAdded
        - event: ProcessExecuted((uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256)
          handler: handleProcessExecuted
        - event: ProcessStarted((uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256,indexed bytes)
          handler: handleProcessStarted
  - name: DisputableProcess
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: DisputableProcess
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/process.ts
      entities:
        - Execution
        - Process
      abis:
        - name: DisputableProcess
          file: ./../contracts/artifacts/contracts/core/processes/types/disputable/DisputableProcess.sol/DisputableProcess.json
      eventHandlers:
        - event: AllowedActionsAdded(bytes[])
          handler: handleAllowedActionsAdded
        - event: ProcessExecuted((uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256)
          handler: handleProcessExecuted
        - event: ProcessForwarded((indexed uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256)
          handler: handleProcessForwarded
        - event: ProcessHalted((indexed uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256)
          handler: handleProcessHalted
        - event: ProcessStarted((uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256,indexed bytes)
          handler: handleProcessStarted
        - event: ProcessStopped((indexed uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256)
          handler: handleProcessStopped
  - name: StoppableProcess
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: StoppableProcess
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/process.ts
      entities:
        - Execution
        - Process
      abis:
        - name: StoppableProcess
          file: ./../contracts/artifacts/contracts/core/processes/types/stoppable/StoppableProcess.sol/StoppableProcess.json
      eventHandlers:
        - event: AllowedActionsAdded(bytes[])
          handler: handleAllowedActionsAdded
        - event: ProcessExecuted((uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256)
          handler: handleProcessExecuted
        - event: ProcessStarted((uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256,indexed bytes)
          handler: handleProcessStarted
        - event: ProcessStopped((indexed uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256)
          handler: handleProcessStopped
  - name: VotingProcess
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: VotingProcess
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/process.ts
      entities:
        - Execution
        - Process
      abis:
        - name: VotingProcess
          file: ./../contracts/artifacts/contracts/core/processes/types/voting/VotingProcess.sol/VotingProcess.json
      eventHandlers:
        - event: AllowedActionsAdded(bytes[])
          handler: handleAllowedActionsAdded
        - event: ProcessExecuted((uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256)
          handler: handleProcessExecuted
        - event: ProcessStarted((uint256,(address,uint256,bytes)[],bytes,uint8),indexed uint256,indexed bytes)
          handler: handleProcessStarted
        - event: VotedOnProcess((indexed uint256,(address,uint256,bytes)[],bytes,uint8),indexed bytes,uint256)
          handler: handleVotedOnProcess
  # Voting (package process)
  - name: SimpleVoting
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: SimpleVoting
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/registry.ts
      entities:
        - Execution
        - Process
      abis:
        - name: SimpleVoting
          file: ./../contracts/artifacts/contracts/packages/processes/votings/simple/SimpleVoting.sol/SimpleVoting.json
      eventHandlers:
        - event: CastVote(indexed uint256,indexed address,bool,uint256)
          handler: handleCastVote
        - event: ChangeMinQuorum(uint64)
          handler: handleChangeMinQuorum
        - event: ChangeSupportRequired(uint64)
          handler: handleChangeSupportRequired
        - event: ExecuteVote(indexed uint256)
          handler: handleExecuteVote
        - event: StartVote(indexed uint256,indexed address,string)
          handler: handleStartVote
# Types

# Token
type ERC20Token @entity {
  id: ID! # use address as id
  name: String!
  symbol: String!
  decimals: BigInt!
}

type ERC20Balance @entity {
  id: ID! # token address + dao address
  token: ERC20Token!
  dao: Dao!
  balance: BigInt!
}

# Dao
type Action @entity {
  id: ID!
  to: Bytes!
  value: BigInt!
  data: Bytes!
  dao: Dao!
  execResult: Bytes
}

type VaultWithdraw @entity {
  id: ID!
  dao: Dao!
  token: Bytes
  to: Bytes!
  amount: BigInt!
  reference: String!
}

type VaultEthDeposit @entity {
  id: ID!
  dao: Dao!
  sender: Bytes!
  amount: BigInt!
}

type VaultDeposit @entity {
  id: ID!
  dao: Dao!
  token: Bytes!
  sender: Bytes!
  amount: BigInt!
  reference: String!
}

type Dao @entity {
  id: ID! # use address as id
  name: String!
  creator: Bytes!
  metadata: String!
  token: Bytes!
  actions: [Action!]! @derivedFrom(field: "dao")
  ethDeposits: [VaultEthDeposit!]! @derivedFrom(field: "dao")
  tokenDeposits: [VaultDeposit!]! @derivedFrom(field: "dao")
  withdraws: [VaultWithdraw!]! @derivedFrom(field: "dao")
  erc20Balances: [ERC20Balance!] @derivedFrom(field: "dao")
}
